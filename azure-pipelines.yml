# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

#trigger:
#- master

pool:
  vmImage: 'ubuntu-latest'

name: 0.0$(rev:.r)

stages:
- stage: build
  jobs:
  - job: build
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '-c Release'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'test/Vecc.Prometheus.UnitTests/Vecc.Protheus.UnitTests.csproj'
        arguments: '--no-build'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: 'src/Vecc.Prometheus/Vecc.Prometheus.csproj'
        configuration: 'Release'
        nobuild: true
        versioningScheme: 'byBuildNumber'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'package'
        publishLocation: 'pipeline'
- stage: deploy
  jobs:
    - job: deploy
      steps:
        - checkout: none
        - task: DownloadPipelineArtifact@2
          inputs:
            artifact: package
            path: package
        - task: NuGetCommand@2
          inputs:
            command: 'push'
            packagesToPush: 'package/*.nupkg;'
            nuGetFeedType: 'external'
            publishFeedCredentials: 'nuget.org-github-pipelines'
